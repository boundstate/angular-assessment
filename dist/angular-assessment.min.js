/**
 * angular-assessment - v0.0.10 - 2014-08-21
 *
 * Copyright (c) 2014 Bound State Software
 */
!function(a,b,c){b.module("boundstate.assessment",["templates-main","ngSanitize","boundstate.scrollToMe"]),b.module("boundstate.assessment").directive("assessment",["assessment",function(a){return{restrict:"AE",scope:{},link:function(b,c){b.questions=a.getQuestions(),b.offset=c[0].getBoundingClientRect().top},templateUrl:"directive/assessment.tpl.html",replace:!0}}]),b.module("boundstate.assessment").directive("question",["assessment",function(a){return{restrict:"AE",scope:{},link:function(b,c,d){b.question=a.getQuestion(d.questionId),b.form={};var e=function(){b.isCurrent=b.question.id==a.getCurrentQuestion().id,b.form.answer=a.getAnswer(b.question.id)};b.$on("boundstate.assessment:answer_changed",e),e(),b.setAnswer=function(c){a.setAnswer(b.question.id,c)}},templateUrl:"directive/question.tpl.html",replace:!0}}]),b.module("boundstate.assessment").factory("Question",["$window",function(a){var d=a._,e=function(a){if(b.isUndefined(a.id))throw new Error("Question id must be specified");if(b.isUndefined(a.label))throw new Error("Question label must be specified");this.id=a.id,this.type=a.type||"choice",this.label=a.label,this.hint=a.hint,this.config=a,this.isEnabled=!1};return e.prototype.getSelectedOption=function(){return b.isDefined(this.answer)?d.find(this.options,{value:this.answer}):c},e.prototype.isAnswered=function(){return"choice"==this.type?b.isDefined(this.getSelectedOption()):b.isDefined(this.answer)&&this.answer.length>0},e.prototype.reload=function(a,b){"choice"==this.type&&this._reloadOptions(a,b),this._reloadIsApplicable(a,b),this._reloadScore(a,b)},e.prototype._reloadOptions=function(a,c){for(var d=b.isFunction(this.config.options)?this.config.options(a,c):this.config.options,e=0;e<d.length;e++)b.isObject(d[e])||(d[e]={label:d[e],value:d[e]});this.options=d},e.prototype._reloadIsApplicable=function(a,c){this.isApplicable=b.isDefined(this.config.isApplicable)?this.config.isApplicable(a,c):!0},e.prototype._reloadScore=function(a,d){if(this.score=a,this.isAnswered()){var e="choice"==this.type?this.getSelectedOption():c;b.isDefined(e)&&b.isDefined(e.score)?this.score=e.score:b.isDefined(this.config.score)&&(this.score=this.config.score(this.answer,a,d))}},e}]),b.module("boundstate.assessment").provider("assessment",function(){var a=[{label:"Yes",value:"y"},{label:"No",value:"n"}],d=[];this.setDefaultQuestionOptions=function(b){a=b},this.setQuestions=function(a){if(!b.isArray(a))throw new Error("Questions must be an array");d=a},this.$get=["$rootScope","$window","Question",function(e,f,g){var h=null,i=!1,j=[],k=null,l=f._;b.forEach(d,function(c){if(l.find(j,{id:c.id}))throw new Error('A question with the id "'+c.id+'" is already defined');(b.isUndefined(c.type)||"text"==c.type)&&b.isUndefined(c.options)&&(c.options=a),j.push(new g(c))});var m={getScore:function(){return h},isComplete:function(){return i},getCurrentQuestion:function(){return k},getQuestions:function(){return j},getQuestion:function(a){return l.find(j,{id:a})},getQuestionIndex:function(a){return l.findIndex(j,{id:a})},isQuestionApplicable:function(a){var c=this.getQuestion(a);return b.isDefined(c)?c.isApplicable:!1},isQuestionEnabled:function(a){var c=this.getQuestion(a);return b.isDefined(c)?c.isEnabled:!1},setAnswer:function(a,b){var c=this.getQuestion(a);c.answer=b,this.reload(),e.$broadcast("boundstate.assessment:answer_changed")},getAnswer:function(a){var b=this.getQuestion(a);return b.isAnswered()?b.answer:c},clearAnswers:function(){for(var a=0;a<j.length;a++)delete j[a].answer;this.reload(),e.$broadcast("boundstate.assessment:answer_changed")},reload:function(){var a=this,c=!0;h=null,b.forEach(j,function(b){b.reload(h,a),c&&b.isApplicable?(b.isEnabled=!0,h=b.score,k=b,c=b.isAnswered()):b.isEnabled=!1}),i=k.isAnswered()}};return m.reload(),m}]}),b.module("templates-main",["directive/assessment.tpl.html","directive/question.tpl.html"]),b.module("directive/assessment.tpl.html",[]).run(["$templateCache",function(a){a.put("directive/assessment.tpl.html",'<div class="assessment">\n  <div question ng-repeat="question in questions" question-id="{{question.id}}" offset="{{offset}}"></div>\n</div>')}]),b.module("directive/question.tpl.html",[]).run(["$templateCache",function(a){a.put("directive/question.tpl.html",'<div id="question-{{question.id}}" class="question" ng-show="question.isEnabled" ng-class="{ current: isCurrent && !question.isAnswered() }" scroll-to-me="isCurrent">\n  <div class="question-label" ng-bind-html="question.label"></div>\n  <div class="question-hint" ng-if="question.hint" ng-bind-html="question.hint"></div>\n  <div ng-if="question.type == \'choice\'">\n    <div class="choice" ng-repeat="option in question.options" ng-class="{ active: option.value === form.answer }">\n      <label>\n        <input type="radio" ng-model="form.answer" ng-value="option.value" ng-change="setAnswer(form.answer)"> {{ option.label }}\n      </label>\n    </div>\n  </div>\n  <div class="text" ng-if="question.type == \'text\'">\n    <form ng-submit="setAnswer(form.answer);">\n      <input type="text" placeholder="{{ question.config.placeholder }}" ng-model="form.answer" ng-focus="hasFocus = true" ng-blur="setAnswer(form.answer); hasFocus = false">\n      <button type="submit" ng-show="hasFocus">Done</button>\n    </form>\n  </div>\n</div>')}])}(window,window.angular);